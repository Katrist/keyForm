"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[164],{33473:e=>{e.exports=JSON.parse('{"functions":[{"name":"loadKey","desc":"Loads a key from the store. This is used to interact with the store\'s data. The \\"keyName\\" parameter is used to identify the key in the store.\\n\\n```lua\\nlocal keyForm = require(path.to.keyForm)\\n\\nlocal store = keyForm.createStore(\\"storeName\\", {\\n\\tfoo = \\"bar\\",\\n})\\n\\nlocal key = store:loadKey(\\"keyName\\") -- Loads the key \\"keyName\\" from the store \\"storeName\\"\\n```","params":[{"name":"keyName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"key key"}],"function_type":"method","source":{"line":88,"path":"src/init.luau"}},{"name":"createTransform","desc":"Creates a new transform function. This is used to update the store\'s data. The \\"transformFunction\\" parameter is a function that takes the current data and any number of additional parameters. Transforms should always return the new data. This function is synchronous.\\n\\n```lua\\nlocal keyForm = require(path.to.keyForm)\\n\\nlocal store = keyForm.createStore(\\"storeName\\", {\\n\\tfoo = \\"bar\\",\\n})\\n\\nlocal transform = store:createTransform(function(data, newValue)\\n\\tdata.foo = newValue\\n\\treturn data\\nend)\\n```","params":[{"name":"callback","desc":"","lua_type":"(data: T, ...any) -> T"}],"returns":[{"desc":"","lua_type":"transformFunction (key, ...any) -> ()"}],"function_type":"method","source":{"line":111,"path":"src/init.luau"}},{"name":"createAsyncTransform","desc":"An async version of `createTransform`.","params":[{"name":"callback","desc":"","lua_type":"(data: T, ...any) -> T"}],"returns":[{"desc":"","lua_type":"transformFunction (key, ...any) -> ()"}],"function_type":"method","source":{"line":121,"path":"src/init.luau"}}],"properties":[],"types":[],"name":"store","desc":"Represents a data store. This is the main entry point for the library. You can create a new store using the `keyForm.createStore` function.\\n\\n```lua\\nlocal keyForm = require(path.to.keyForm)\\n\\nlocal store = keyForm.createStore(\\"storeName\\", {\\n\\tfoo = \\"bar\\",\\n}) -- Creates a new store with the name \\"storeName\\" and the default value of \\"foo\\" being \\"bar\\"\\n```","source":{"line":68,"path":"src/init.luau"}}')}}]);